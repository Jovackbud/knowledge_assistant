# version: '3.8' # Using a slightly newer version for consistency, 3.5 features are compatible.

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.14
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      # Adjusted path: Assuming 'volumes' is inside 'milvus' directory in project root
      - ./milvus/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - milvus_network

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001" # For Minio console
      - "9000:9000" # For Minio API
    volumes:
      # Adjusted path
      - ./milvus/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - milvus_network

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.5.0 # Using the version from user's milvus compose
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      # Adjusted path
      - ./milvus/volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530" # Milvus SDK port
      - "9091:9091"   # Milvus health/metrics port
    depends_on:
      etcd:
        condition: service_healthy # Wait for etcd to be healthy
      minio:
        condition: service_healthy # Wait for minio to be healthy
    networks:
      - milvus_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  app: # Renamed from flask_frontend, runs FastAPI only
    build: .
    command: bash scripts/start.sh # This script now starts only FastAPI
    ports:
      - "8000:8000" # For FastAPI
    volumes:
      - ./src:/app 
      - ./data:/data
    env_file:
      - .env
    # FASTAPI_URL is not needed as this service is the FastAPI provider.
    networks:
      - milvus_network
    depends_on:
      standalone: # Depends on Milvus to be healthy
        condition: service_healthy


networks:
  milvus_network: # Define the shared network
    name: milvus_stack_network # Explicitly naming the network

# Remove the old milvus_data volume if it's no longer needed (it was for the placeholder image)
# volumes:
#  milvus_data:
